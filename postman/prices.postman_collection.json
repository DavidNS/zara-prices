{
	"info": {
		"_postman_id": "a6ddc513-92c6-41ac-a245-77d595e25379",
		"name": "prices",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET_ONE",
			"item": [
				{
					"name": "GET_first_request_on_load",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const expetedResponseTime = 2*parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": 1,\n    \"productId\": 35455,\n    \"applicationDate\": \"2020-06-14-10.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_brandId1_productId35455_applicationDate2020-06-14-10.00.00",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=200;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"const expectedJson={",
									"    \"brandId\": 1,",
									"    \"productId\": 35455,",
									"    \"priceList\": 1,",
									"    \"startDate\": \"2020-06-14-00.00.00\",",
									"    \"endDate\": \"2020-12-31-23.59.59\",",
									"    \"price\": 35.5",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function () {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Response body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": 1,\n    \"productId\": 35455,\n    \"applicationDate\": \"2020-06-14-10.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_brandId1_productId35455_applicationDate2020-06-14-16.00.00",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=200;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"const expectedJson={",
									"    \"brandId\": 1,",
									"    \"productId\": 35455,",
									"    \"priceList\": 2,",
									"    \"startDate\": \"2020-06-14-15.00.00\",",
									"    \"endDate\": \"2020-06-14-18.30.00\",",
									"    \"price\": 25.45",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function ()  {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": 1,\n    \"productId\": 35455,\n    \"applicationDate\": \"2020-06-14-16.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_brandId1_productId35455_applicationDate2020-06-14-21.00.00",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=200;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"const expectedJson={",
									"    \"brandId\": 1,",
									"    \"productId\": 35455,",
									"    \"priceList\": 1,",
									"    \"startDate\": \"2020-06-14-00.00.00\",",
									"    \"endDate\": \"2020-12-31-23.59.59\",",
									"    \"price\": 35.5",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function () {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function ()  {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": 1,\n    \"productId\": 35455,\n    \"applicationDate\": \"2020-06-14-21.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_brandId1_productId35455_applicationDate2020-06-15-10.00.00",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=200;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"const expectedJson={",
									"    \"brandId\": 1,",
									"    \"productId\": 35455,",
									"    \"priceList\": 3,",
									"    \"startDate\": \"2020-06-15-00.00.00\",",
									"    \"endDate\": \"2020-06-15-11.00.00\",",
									"    \"price\": 30.5",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function () {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": 1,\n    \"productId\": 35455,\n    \"applicationDate\": \"2020-06-15-10.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_brandId1_productId35455_applicationDate2020-06-15-21.00.00",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=200;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"const expectedJson={",
									"    \"brandId\": 1,",
									"    \"productId\": 35455,",
									"    \"priceList\": 4,",
									"    \"startDate\": \"2020-06-15-16.00.00\",",
									"    \"endDate\": \"2020-12-31-23.59.59\",",
									"    \"price\": 38.95",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function () {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": 1,\n    \"productId\": 35455,\n    \"applicationDate\": \"2020-06-15-21.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_MISSING_BRAND_ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=400;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"var expectedJson={",
									"    \"timestamp\": \"2021-08-26T17:31:00.118292372Z\",",
									"    \"status\": 400,",
									"    \"error\": \"Bad Request\",",
									"    \"causes\": [",
									"        \"brandId is mandatory\"",
									"    ],",
									"    \"path\": \"/prices\"",
									"}",
									"",
									"",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function () {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    expectedJson.timestamp=responseJson.timestamp;",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": null,\n    \"productId\": 1,\n    \"applicationDate\": \"2020-06-15-21.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_MISSING_PRODUCT_ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=400;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"var expectedJson={",
									"    \"timestamp\": \"2021-08-26T17:35:11.323991726Z\",",
									"    \"status\": 400,",
									"    \"error\": \"Bad Request\",",
									"    \"causes\": [",
									"        \"productId is mandatory\"",
									"    ],",
									"    \"path\": \"/prices\"",
									"}",
									"",
									"",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function () {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function ()  {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    expectedJson.timestamp=responseJson.timestamp;",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": 1,\n    \"productId\": null,\n    \"applicationDate\": \"2020-06-15-21.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_MISSING_APPLICATION_DATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=400;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"var expectedJson={",
									"    \"timestamp\": \"2021-08-26T17:36:08.873086697Z\",",
									"    \"status\": 400,",
									"    \"error\": \"Bad Request\",",
									"    \"causes\": [",
									"        \"applicationDate is mandatory\"",
									"    ],",
									"    \"path\": \"/prices\"",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function ()  {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function ()  {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    expectedJson.timestamp=responseJson.timestamp;",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": \"1\",\n    \"productId\": \"35455\",\n    \"applicationDate\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_APPLICATION_DATE_FORMAT_ERROR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=400;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"var expectedJson={",
									"    \"timestamp\": \"2021-08-26T17:49:33.807327746Z\",",
									"    \"status\": 400,",
									"    \"error\": \"Bad Request\",",
									"    \"causes\": [",
									"        \"Text '2020-06-15T21:00:00' could not be parsed at index 10\"",
									"    ],",
									"    \"path\": \"/prices\"",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function ()  {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    expectedJson.timestamp=responseJson.timestamp;",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": \"1\",\n    \"productId\": \"35455\",\n    \"applicationDate\":  \"2020-06-15T21:00:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_APPLICATION_DATE_OUT_OF_RANGE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=400;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"var expectedJson={",
									"    \"timestamp\": \"2021-08-26T18:06:06.894373947Z\",",
									"    \"status\": 400,",
									"    \"error\": \"Bad Request\",",
									"    \"causes\": [",
									"        \"Invalid value for MonthOfYear (valid values 1 - 12): 14\"",
									"    ],",
									"    \"path\": \"/prices\"",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function () {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    expectedJson.timestamp=responseJson.timestamp;",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": \"1\",\n    \"productId\": \"35455\",\n    \"applicationDate\":  \"2020-14-31-21.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_NOT_FOUND",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const exectedStatus=404;",
									"const expetedResponseTime = parseInt(pm.environment.get(\"expectedDefaultResponseTime\"));",
									"var expectedJson={",
									"    \"timestamp\": \"2021-08-26T17:46:03.816798330Z\",",
									"    \"status\": 404,",
									"    \"error\": \"Not Found\",",
									"    \"causes\": [",
									"        \"404 NOT_FOUND \\\"Not found element with these values in database\\\"\"",
									"    ],",
									"    \"path\": \"/prices\"",
									"}",
									"",
									"pm.test(\"Response status: \"+exectedStatus, function ()  {",
									"    pm.response.to.have.status(exectedStatus);",
									"});",
									"",
									"pm.test(\"Response time: \"+expetedResponseTime, function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(expetedResponseTime);",
									"});",
									"",
									"pm.test(\"Body\", function () {",
									"    pm.response.to.be.json;",
									"    const responseJson = pm.response.json();",
									"    expectedJson.timestamp=responseJson.timestamp;",
									"    pm.expect(expectedJson).to.eql(responseJson);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"brandId\": \"2\",\n    \"productId\": \"35455\",\n    \"applicationDate\":  \"2020-06-15-21.00.00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/prices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"prices"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}